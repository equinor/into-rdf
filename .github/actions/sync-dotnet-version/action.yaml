name: Sync CSPROJ Version
description: Jada jada
inputs:
  branch:
    required: true
  csproj-path:
    required: true
  version-file-path:
    required: true
runs:
  using: "composite"
  steps:
    - run: echo ${GITHUB_ACTION_PATH}
      shell: bash
    - run: echo $GITHUB_ACTION_PATH
      shell: bash
    - run: echo "${{ toJSON(github) }}"
      shell: bash
    - uses: actions/checkout@v3
      with:
        ref: refs/heads/${{ inputs.branch }}
    - uses: actions/setup-node@v3
      with:
        cache: "npm"
        cache-dependency-path: ${GITHUB_ACTION_PATH}/package-lock.json
        node-version: 18

    - name: Install dependencies
      shell: bash
      run: cd $GITHUB_ACTION_PATH && npm ci

    - name: Sync version
      shell: bash
      run: |
        cd $GITHUB_ACTION_PATH
        npx tsx sync-version.ts ${{ inputs.csproj-path }} ${{ inputs.version-file-path }}
        res=$?
        if [ $res -eq 0 ]; then
          echo "file_updated=true" >> $GITHUB_ENV
        else
          echo "file_updated=false" >> $GITHUB_ENV
        fi

    - name: Setup git config
      if: ${{ env.file_updated == 'true' }}
      shell: bash
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Commit changes
      if: ${{ env.file_updated == 'true' }}
      shell: bash
      run: |
        git status
        git add .
        git commit -m "chore: Sync version.txt and .CSProj [skip ci]\nSynced file: ${{ inputs.csproj-path }}"
        git push origin ${{ inputs.branch }}
