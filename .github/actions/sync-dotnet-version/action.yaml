name: Sync CSPROJ Version
description: Jada jada
inputs:
  branch:
    required: false
  csproj-path:
    required: true
outputs:
  success:
    description: Is synced?
    value: ${{ steps.sync-version.outputs.result }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        ref: refs/heads/${{ inputs.branch }}
    #- name: Debug branch
    #  shell: bash
    #  run: echo "${{ toJSON(github) }}"
    - name: Update .csproj Version
      uses: actions/github-script@v6
      id: sync-version
      env:
        PATH: ${{ inputs.csproj-path }}
      with:
        script: |
          const { default: syncVersion } = await import('${{ github.workspace }}/.github/actions/sync-dotnet-version/index.js')
          return await syncVersion({github, context, core})
    #- name: Check if any changes
    #  shell: bash
    #  run: |
    #    if [ -z "$(git diff)" ]; then
    #      echo "CHANGES=false" >> $GITHUB_ENV
    #    else
    #      echo "CHANGES=true" >> $GITHUB_ENV
    #    fi
    - name: Setup git config
      if: ${{ steps.sync-version.outputs.result }}
      shell: bash
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
    - name: Commit changes
      if: ${{ steps.sync-version.outputs.result }}
      shell: bash
      run: |
        git status
        git add .
        git commit -m "chore: Sync version.txt and CSProj [skip ci]"
        git push origin ${{ inputs.branch }}
