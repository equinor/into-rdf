name: '💎 Code Quality'
on:
  workflow_dispatch:
  workflow_call:
        secrets:
            SNYK_TOKEN:
                required: true
            AZURE_CLIENT_ID:
                required: true
            AZURE_TENANT_ID:
                required: true
  schedule:
  # Run every monday at 0200UTC
    - cron: "0 2 * * 1"
    
env:
  DOTNET_VERSION: '6.x.x'

jobs:
  code_quality:
    name: '🛠️ Build & 🧪 Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: 📦 Restore dependencies
        run: dotnet restore -r linux-x64
        
      - name: 🛠️ Build Solution
        run: dotnet build --no-restore --configuration Release
      
      - name: 🧪 Run Tests
        run: dotnet test --no-restore --no-build --configuration Release
        
  security_vulnerabilities:
    name: 🚨 Security vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: 📦 Restore dependencies
        run: dotnet restore -r linux-x64

      - uses: snyk/actions/setup@master
      - name: Run Snyk to check for vulnerabilities
        run: snyk test --fail-on=all --severity-threshold=high --file=SpineSplinter.sln
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  infrastructure:
      name: 🏗️ Verify infrastructure
      runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: read
      steps:
        - uses: actions/checkout@v3

        - name: Azure Login
          uses: Azure/login@v1.4.5
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            allow-no-subscriptions: true

        - name: Verify Infrastructure as Code
          working-directory: Azure-resources
          run: | 
            az deployment group what-if \
            --resource-group 'dev-spinesplinter' \
            --template-file ./setupEnv.bicep \
            --parameters \
            env='dev' \
            sku='B1' \
            resourcePrefix='dev-spinesplinter'
